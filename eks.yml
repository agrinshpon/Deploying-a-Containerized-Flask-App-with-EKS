AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS role, security group, and cluster setup'

Resources:

  EKSIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID

  EKSCluster:
  Type: AWS::EKS::Cluster
  Properties:
    Version: '1.14'
    RoleArn:
      "Fn::GetAtt": ["EKSIAMRole", "Arn"]
    ResourcesVpcConfig:
      SecurityGroupIds:
      - !Ref EKSSecGroup
      SubnetIds:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB1-SN
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB2-SN
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PRI1-SN
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PRI2-SN
  DependsOn: [EKSIAMRole, EKSSecGroup]

Outputs:

  RoleArn:
    Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt eksServiceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-RoleArn"

  SecurityGroups:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !Join [ ",", [ !Ref EKSSecGroup ] ]
